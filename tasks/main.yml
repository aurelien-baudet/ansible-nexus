---
# tasks file for ansible-nexus
- name: Download nexus_package 
  get_url: url="{{ nexus_download_url }}" dest="{{ nexus_download_dir }}/{{ nexus_package }}"
  tags: download
  become: false

- name: Ensure Nexus o/s group exists
  group: name="{{ nexus_os_group }}" state=present
  when: nexus_create_os_group
  become: true

- name: Ensure Nexus o/s user exists
  user: name="{{ nexus_os_user }}" group="{{ nexus_os_group }}" shell="{{ nexus_os_user_shell }}" state=present home="{{ nexus_os_home }}"
  when: nexus_create_os_user
  become: true

- name: Ensure Nexus installation directory exists
  file:
    path="{{ nexus_installation_dir }}"
    state="directory"
  become: true

- name: Get folder name for Nexus in downloaded archive
  shell: "tar tzf '{{ nexus_download_dir }}/{{ nexus_package }}' | sed -e 's@/.*@@' | uniq"
  register: nexus_extracted_folder_name_result

- set_fact:
    nexus_extracted_folder_name: "{{ nexus_extracted_folder_name_result.stdout_lines[0] }}"
    
- name: Unpack Nexus download
  unarchive:
    src="{{ nexus_download_dir }}/{{ nexus_package }}"
    dest="{{ nexus_installation_dir }}"
    creates="{{ nexus_installation_dir }}/{{ nexus_extracted_folder_name }}"
    force=no
    copy=false
    owner={{ nexus_os_user }}
    group={{ nexus_os_group }}
    mode="0755"
  tags: unpack
    
- name: Update symlink nexus-latest
  file:
   src="{{ nexus_installation_dir }}/{{ nexus_extracted_folder_name }}"
   dest="{{ nexus_installation_dir }}/nexus-latest"
   owner="nexus"
   group="nexus"
   state=link

- name: Install createrepo for nexus-yum-repository-plugin
  yum: name=createrepo state=installed
  when: ansible_os_family == "RedHat"

- name: Check if sonatype working directory exists
  stat: path="{{ nexus_installation_dir }}/sonatype-work"
  register: s_w

- name: Move existing sonatype working directory into specified working dir
  command: mv "{{ nexus_installation_dir }}/sonatype-work" "{{ nexus_working_dir }}"
  when: s_w.stat.exists

- name: Set permissions and ownership on Nexus installation directory
  file:
    path={{ nexus_installation_dir }}/{{ nexus_extracted_folder_name }}
    state="directory"
    owner="{{ nexus_os_user }}"
    group="{{ nexus_os_group }}"
    mode="0755"
    recurse=true

- name: Set permissions and ownership on Nexus work directory
  file:
    path={{ nexus_working_dir }}
    state="directory"
    owner="{{ nexus_os_user }}"
    group="{{ nexus_os_group }}"
    mode="0755"
    recurse=true

- name: Set permissions and ownership on Nexus logs directory
  file:
    path={{ nexus_installation_dir }}/nexus-latest/logs
    owner="{{ nexus_os_user }}"
    group="{{ nexus_os_group }}"
    state=directory

- name: Set permissions and ownership on Nexus tmp directory
  file:
    path={{ nexus_installation_dir }}/nexus-latest/tmp
    owner="{{ nexus_os_user }}"
    group="{{ nexus_os_group }}"
    state=directory

- name: Set permissions and ownership on Nexus pid directory
  file:
   path=/var/run/nexus
   owner="{{ nexus_os_user }}"
   group="{{ nexus_os_group }}"
   state=directory

- name: Add dedicated configuration folder
  file:
   path="{{ nexus_working_dir }}/nexus3/etc"
   owner="{{ nexus_os_user }}"
   group="{{ nexus_os_group }}"
   state=directory

- name: Configure Nexus port
  template:
    src="nexus.properties.j2"
    dest="{{ nexus_working_dir }}/nexus3/etc/nexus.properties"
    force="yes"
    backup="yes"
  notify:
    - 'restart nexus'
    
- name: Configure user
  lineinfile:
    dest="{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc"
    regexp="run_as_user=.*"
    line="run_as_user='nexus'"
    state=present
  notify:
    - 'restart nexus'
    
- name: Configure path to data
  lineinfile:
    dest="{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp="-Dkaraf.data=.*"
    line="-Dkaraf.data={{ nexus_working_dir }}/nexus3"
    state=present  

- name: Configure path to tmp
  lineinfile:
    dest="{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp="-Djava.io.tmpdir=.*"
    line="-Djava.io.tmpdir={{ nexus_working_dir }}/nexus3/tmp"
    state=present  

- name: Configure path to tmp
  lineinfile:
    dest="{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp="-XX:LogFile=.*"
    line="-XX:LogFile={{ nexus_working_dir }}/nexus3/log/jvm.log"
    state=present  

- name: Increase limits
  pam_limits:
    domain: "{{ nexus_os_user }}"
    limit_type: '-'
    limit_item: nofile
    value: "{{ nexus_file_handle_limit }}"

- include_tasks: "service/{{ ansible_service_mgr }}.yml"
